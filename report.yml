jira:
  # these come from either .env or environment
  # base_url: https://tidepool.atlassian.net
  # username: travis-ci@tidepool.org
  # api_token: ...
  parameters:
    fix_version: 'FDA 510(k) Sub'
    component: '510(k)'
    exclude: ExcludeFromReport
  queries:
    func_requirements: project=TLFR AND issuetype="Functional Requirement" AND (component NOT IN ({exclude}) OR component IS EMPTY)
    user_requirements: project=TLFR AND issuetype="User Requirement" AND (component NOT IN ({exclude}) OR component IS EMPTY)
    risks: project=TLR AND issuetype IN (Story, Task) AND (component NOT IN ({exclude}) OR component IS EMPTY)
    epics: project=LOOP AND fixVersion="{fix_version}" AND issuetype="Epic" AND (component NOT IN ({exclude}) OR component is EMPTY)
    stories: project=LOOP AND (fixVersion="{fix_version}" OR component="{component}") AND issuetype IN (Story, Bug, Task, Sub-task) AND (component NOT IN ({exclude}) OR component IS EMPTY)
    tests: project=LOOP AND issuetype IN ("Test", "Test Execution", "Sub Test Execution") AND (component NOT IN ({exclude}) OR component IS EMPTY)
    instructions: project=IFU AND (component NOT IN ({exclude}) OR component IS EMPTY)
  fields:
    epic_key: customfield_10014
    functional_requirements: customfield_10132
    done_criteria: customfield_10072
    test_strategy: customfield_10036
    reference_id: customfield_10140
    source: customfield_10115
    sequence_of_events: customfield_10144
    harm: customfield_10089
    hazard_category: customfield_10095
    initial_severity: customfield_10085
    initial_probability: customfield_10086
    initial_risk: customfield_10101
    residual_severity: customfield_10093
    residual_probability: customfield_10094
    residual_risk: customfield_10102
    benefit: customfield_10142
    risk_level: customfield_10027
    uea_level: customfield_10028
  issue_types:
    epic:                { ids: [ 10000 ], projects: [ LOOP, TLR, TLFR, IFU ] }
    story:               { ids: [ 10001, 10002 ], projects: [ LOOP ] }
    subtask:             { ids: [ 10003 ], projects: [ LOOP, TLR, TLFR, IFU ] }
    bug:                 { ids: [ 10004 ], projects: [ LOOP ] }
    feedback:            { ids: [ 10005 ], projects: [ LOOP ] }
    test:                { ids: [ 10016, 10019, 10021 ], projects: [ LOOP ] }
    func_requirement:    { ids: [ 10024 ], projects: [ TLFR ] }
    user_requirement:    { ids: [ 10027 ], projects: [ TLFR ] }
    risk:                { ids: [ 10001 ], projects: [ TLR ] } # yes, same ID as story
    external_mitigation: { ids: [ 10026 ], projects: [ TLR ] }
    instruction:         { ids: [ 10001, 10002 ], projects: [ IFU ] } # yes, same as story
  link_types:
    blocks:     { id: 10000 }
    clones:     { id: 10001 }
    duplicates: { id: 10002 }
    relates:    { id: 10003 }
    splits:     { id: 10102 }
    mitigates:  { id: 10103 }
    verifies:   { id: 10104 }
    tests:      { id: 10105 }
    defect:     { id: 10106 }
    changes:    { id: 10107 }
    defines:    { id: 10108 }
  cache:
    folder: cache
    refresh: 3600
  exclude_fields: [ project, labels, comment, attachment, creator, reporter, assignee, watches, votes, worklog, workratio, progress, aggregateprogress, timetracking, timeestimate, aggregatetimeestimate, aggregatetimeoriginalestimate, timespent, aggregatetimespent, issuerestriction, lastViewed, customfield_10073, customfield_10026, customfield_10021, customfield_10038 ]

zip:
  output: output/report.zip

html:
  title: Tidepool Loop 1.0
  subject: Traceability and Hazard Analysis
  author: Tidepool Project
  manager: Tapani Otala
  company: Tidepool Project
  keywords: verification,test,report
  comments: Created with Python and atlassian-python-api and xlsxwriter
  aggregate_risks: true
  images:
    splash1: templates/html/Tidepool Loop iPhone X - Generic Pump.png
    splash2: templates/html/Watch 38mm + Loop Home.png
    logo: templates/html/Tidepool_Logo_Light_Large.png
  templates:
    report: templates/html/report.html
    style: templates/html/report.css
  output:
    splash1: output/Tidepool Loop iPhone X - Generic Pump.png
    splash2: output/Watch 38mm + Loop Home.png
    logo: output/Tidepool_Logo_Light_Large.png
    report: output/report.html
    #style: output/report.css # don't copy it to output, it'll be embedded in report.html
  sections:
    requirements: true
    risks: true

pdf:
  input:
    cover: templates/pdf/cover.html
    cover_style: templates/pdf/cover.css
    header: templates/pdf/header.html
    style: templates/pdf/print.css
    report: output/report.html
  output:
    cover: output/cover.html
    header: output/header.html
    report: output/report.pdf

excel:
  properties:
    title: 'Tidepool Loop 1.0'
    subject: 'Reports for Regulatory Agency'
    author: 'Tidepool Project'
    manager: 'Tapani Otala'
    company: 'Tidepool Project'
    keywords: 'traceability,hazard,analysis,verification,test,report'
    comments: 'Created with Python and atlassian-python-api and xlsxwriter'
  window_size: [ 2500, 1400 ]
  page:
    paper_size: 5 # US Legal size
    margins: { left: 0.5, right: 0.5, top: 0.75, bottom: 0.5 }
    header:
      left: 'Tidepool Loop 1.0 Reports for Regulatory Agency'
      center: '{sheet}'
      right: templates/excel/Tidepool_Logo_Light_Large.png
    footer:
      left: 'Generated on {date}'
      right: 'Page &P of &N'
  formats:
    # all formats are based on this base format; any fields in them override these settings
    base: { font_name: Helvetica Neue, font_size: 10, bold: false, text_wrap: true, align: left, valign: top, border: 1 }
    url: { font_color: blue, underline: 1 }
    column_header: { font_size: 12, bold: true, font_color: white, bg_color: gray }
    bold: { bold: true }
    low_risk: { bg_color: green }
    medium_risk: { bg_color: yellow }
    high_risk: { bg_color: red }
    page_header: { font_size: 16, bold: true }
    page_footer: { font_size: 12 }
  labels:
    passed: ✅ PASSED
    blocked: ❌ BLOCKED
  risks: # initial_risk and residual_risk prefix strings
    low: Green
    medium: Yellow
    high: Red
  sheets:
    # sheet names max 31 characters
    cover:
      generator: add_cover_sheet # method name in excel.py
      name: Cover
      width: 120 # column width
      items:
        title:
          position: A1
          text: 'Tidepool Loop 1.0 Reports for Regulatory Agency'
          format: { font_size: 20, bold: true, border: 0 }
        subtitle:
          position: A2
          text: 'Generated on {date}'
          format: { font_size: 14, bold: true, border: 0 }
        introduction:
          position: A3
          text: |-

            This document is intended to show the detail of the Tidepool’s Quality Management System for Tidepool Loop. The document was automatically generated from Tidepool’s quality management system. The source documents are in Jira, our project management system. Information was pulled from these projects:
            • Tidepool Loop Functional Requirements - TLFR
            • Tidepool Loop Risks - TLR
            • Tidepool Loop Work Tickets - LOOP

            Tabs in this spreadsheet:
            • Traceability: This spreadsheet tab demonstrates traceability to and from all Tidepool Loop functional requirements. It has columns for each requirement, associated risks, design and development, verification tests, and test status.
              • For more information on Tidepool Loop’s requirements, please see Section 16 of the main pre-marketing notification document.
            • Hazard Analysis: This spreadsheet tab demonstrates Tidepool’s Risk and Hazard analysis of Tidepool Loop. Columns are included for each risk, including a summary, the potential harm and hazard category, risk assessment prior to mitigation, details of any mitigation, and risk assessment post-mitigation.
          
          format: { border: 0 }
        splash1:
          position: A4
          image: templates/excel/Tidepool Loop iPhone X - Generic Pump.png
          height: 250 # row height
          options: { object_position: 3, x_offset: 150, y_offset: 0, x_scale: 0.25, y_scale: 0.25 }
        splash2:
          position: A4
          image: templates/excel/Watch 38mm + Loop Home.png
          height: 250 # row height
          options: { object_position: 3, x_offset: 500, y_offset: 100, x_scale: 0.25, y_scale: 0.25 }
    requirements:
      generator: add_requirements_sheet # method name in excel.py
      name: 'Traceability Report'
      aggregate_risks: true
      columns:
        - { width: 7,  key: req_id,          label: 'Req ID' }
        - { width: 10, key: req_key,         label: 'Req Key' }
        - { width: 50, key: req_summary,     label: 'Req Feature' }
        - { width: 50, key: req_description, label: 'Req Description' }
        - { width: 10, key: story_key,       label: 'Story Key' }
        - { width: 50, key: story_summary,   label: 'Story Summary' }
        - { width: 10, key: test_key,        label: 'Test Key' }
        - { width: 50, key: test_summary,    label: 'Test Summary' }
        - { width: 11, key: test_status,     label: 'Test Status' }
        - { width: 2,  key: gap,             label: '' }
        - { width: 10, key: risk_key,        label: 'Risk Key' }
        - { width: 50, key: risk_summary,    label: 'Hazardous Situation' }
    risks:
      generator: add_risks_sheet # method name in excel.py
      name: 'Hazard Analysis'
      columns:
        - { width: 10, key: risk_key,             label: 'Risk Key' }
        - { width: 50, key: risk_summary,         label: 'Hazardous Situation' }
        - { width: 25, key: source,               label: 'Source' }
        - { width: 30, key: sequence,             label: 'Sequence of Events' }
        - { width: 25, key: harm,                 label: 'Harm' }
        - { width: 13, key: hazard,               label: 'Hazard Category' }
        - { width: 12, key: initial_severity,     label: 'Initial Severity' }
        - { width: 12, key: initial_probability,  label: 'Initial Probability' }
        - { width: 11, key: initial_risk,         label: 'Initial Risk Score' }
        - { width: 10, key: mitigation_key,       label: 'Mitigation Key' }
        - { width: 50, key: mitigation_summary,   label: 'Mitigation Summary' }
        - { width: 12, key: residual_severity,    label: 'Residual Severity' }
        - { width: 12, key: residual_probability, label: 'Residual Probability' }
        - { width: 11, key: residual_risk,        label: 'Residual Risk Score' }
        - { width: 10, key: benefit,              label: 'Benefit outweigh Risks? Y/N' }
    risks2:
      generator: add_risks_sheet_v2 # method name in excel.py
      name: 'Hazard Analysis v2'
      columns:
        - { width: 10, key: risk_key,             label: 'Risk Key' }
        - { width: 50, key: risk_summary,         label: 'Hazardous Situation' }
        - { width: 25, key: source,               label: 'Source' }
        - { width: 30, key: sequence,             label: 'Sequence of Events' }
        - { width: 25, key: harm,                 label: 'Harm' }
        - { width: 13, key: hazard,               label: 'Hazard Category' }
        - { width: 12, key: initial_severity,     label: 'Initial Severity' }
        - { width: 12, key: initial_probability,  label: 'Initial Probability' }
        - { width: 11, key: initial_risk,         label: 'Initial Risk Score' }
        - { width: 10, key: mitigation_key,       label: 'Mitigation Key' }
        - { width: 50, key: mitigation_summary,   label: 'Mitigation Summary' }
        - { width: 12, key: residual_severity,    label: 'Residual Severity' }
        - { width: 12, key: residual_probability, label: 'Residual Probability' }
        - { width: 11, key: residual_risk,        label: 'Residual Risk Score' }
        - { width: 10, key: benefit,              label: 'Benefit outweigh Risks? Y/N' }
    # epics:
    #   generator: add_epics_sheet # method name in excel.py
    #   name: All Development Tickets
    #   columns:
    #     - { width: 10, key: epic_key,      label: 'Epic Key' }
    #     - { width: 50, key: epic_sumamry,  label: 'Epic Summary' }
    #     - { width: 10, key: story_key,     label: 'Story Key' }
    #     - { width: 50, key: story_summary, label: 'Story Summary' }
    #     - { width: 10, key: risk_key,      label: 'Risk Key' }
    #     - { width: 50, key: risk_summary,  label: 'Hazardous Situation' }
    #     - { width: 10, key: test_key,      label: 'Test Key' }
    #     - { width: 50, key: test_summary,  label: 'Test Summary' }
    #     - { width: 11, key: test_status,   label: 'Test Status' }
  output:
    report: output/report.xlsx

graphviz:
  output:
    requirements:
      engine: dot
      format: svg
      graph: output/report_by_reqs
    epics:
      engine: dot
      format: svg
      graph: output/report_by_epics
