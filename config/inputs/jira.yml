# these come from either .env or environment
# base_url: https://tidepool.atlassian.net
# username: travis-ci@tidepool.org
# api_token: ...
parameters:
  fix_version: 'FDA 510(k) Sub'
  include_component: 'iAGC'
  exclude_component: ExcludeFromReport
queries:
  func_requirements: project=TLFR AND issuetype="Functional Requirement" AND (component NOT IN ({exclude_component}) OR component IS EMPTY OR component IN ({include_component}))
  user_requirements: project=TLFR AND issuetype="User Requirement" AND (component NOT IN ({exclude_component}) OR component IS EMPTY OR component IN ({include_component}))
  risks: project=TLR AND issuetype IN (Story, Task) AND (component NOT IN ({exclude_component}) OR component IS EMPTY OR component IN ({include_component}))
  epics: project=LOOP AND fixVersion="{fix_version}" AND issuetype="Epic" AND (component NOT IN ({exclude_component}) OR component is EMPTY OR component IN ({include_component}))
  stories: project=LOOP AND (fixVersion="{fix_version}" OR component="{include_component}") AND issuetype IN (Story, Task, Sub-task) AND (component NOT IN ({exclude_component}) OR component IS EMPTY OR component IN ({include_component}))
  bugs: project=LOOP AND issuetype IN (Bug) AND resolution=Unresolved AND (component NOT IN ({exclude_component}) OR component IS EMPTY)
  tests: project=LOOP AND issuetype IN ("Test", "Test Execution", "Sub Test Execution") AND (component NOT IN ({exclude_component}) OR component IS EMPTY OR component IN ({include_component}))
  instructions: project=IFU AND (component NOT IN ({exclude_component}) OR component IS EMPTY OR component IN ({include_component}))
fields:
  epic_key: customfield_10014
  functional_requirements: customfield_10132
  done_criteria: customfield_10072
  test_strategy: customfield_10036
  reference_id: customfield_10140
  source: customfield_10115
  sequence_of_events: customfield_10144
  harm: customfield_10089
  hazard: customfield_10090
  hazard_category: customfield_10095
  initial_severity: customfield_10085
  initial_probability: customfield_10086
  initial_risk: customfield_10101
  residual_severity: customfield_10093
  residual_probability: customfield_10094
  residual_risk: customfield_10102
  benefit: customfield_10142
  risk_level: customfield_10027
  uea_level: customfield_10028
issue_types:
  epic:                { ids: [ 10000 ], projects: [ LOOP, TLR, TLFR, IFU ] }
  story:               { ids: [ 10001, 10002 ], projects: [ LOOP ] }
  subtask:             { ids: [ 10003 ], projects: [ LOOP, TLR, TLFR, IFU ] }
  bug:                 { ids: [ 10004 ], projects: [ LOOP ] }
  feedback:            { ids: [ 10005 ], projects: [ LOOP ] }
  test:                { ids: [ 10016, 10019, 10021 ], projects: [ LOOP ] }
  func_requirement:    { ids: [ 10024 ], projects: [ TLFR ] }
  user_requirement:    { ids: [ 10027 ], projects: [ TLFR ] }
  risk:                { ids: [ 10001, 10002 ], projects: [ TLR ] } # yes, same as story
  external_mitigation: { ids: [ 10026 ], projects: [ TLR ] }
  instruction:         { ids: [ 10001, 10002 ], projects: [ IFU ] } # yes, same as story
link_types:
  blocks:     { id: 10000 }
  clones:     { id: 10001 }
  duplicates: { id: 10002 }
  relates:    { id: 10003 }
  splits:     { id: 10102 }
  mitigates:  { id: 10103 }
  verifies:   { id: 10104 }
  tests:      { id: 10105 }
  defect:     { id: 10106 }
  changes:    { id: 10107 }
  defines:    { id: 10108 }
cache:
  folder: cache
  refresh: 21600
exclude_fields: [ project, labels, comment, attachment, creator, reporter, assignee, watches, votes, worklog, workratio, progress, aggregateprogress, timetracking, timeestimate, aggregatetimeestimate, aggregatetimeoriginalestimate, timespent, aggregatetimespent, issuerestriction, lastViewed, customfield_10073, customfield_10026, customfield_10021, customfield_10038 ]
