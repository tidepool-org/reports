properties:
  title: 'Tidepool Loop 1.0'
  subject: 'Reports for Regulatory Agency'
  author: 'Tidepool Project'
  manager: 'Tapani Otala'
  company: 'Tidepool Project'
  keywords: 'traceability,hazard,analysis,verification,test,report'
  comments: 'Created with Python and atlassian-python-api and xlsxwriter'
window_size: [ 2500, 1400 ]
page:
  paper_size: 5 # US Legal size
  margins: { left: 0.5, right: 0.5, top: 0.75, bottom: 0.5 }
  header:
    left: 'Tidepool Loop 1.0 Reports for Regulatory Agency'
    center: '{sheet}'
    right: templates/excel/Tidepool_Logo_Light_Large.png
  footer:
    left: 'Generated on {date}'
    right: 'Page &P of &N'
formats:
  # all formats are based on this base format; any fields in them override these settings
  base: { font_name: Helvetica Neue, font_size: 10, bold: false, text_wrap: true, align: left, valign: top, border: 1 }
  summary: { } # same as base
  url: { font_color: blue, underline: 1 }
  column_header: { font_size: 12, bold: true, font_color: white, bg_color: gray }
  bold: { bold: true }
  low_risk: { bg_color: green }
  medium_risk: { bg_color: yellow }
  high_risk: { bg_color: red }
  page_header: { font_size: 16, bold: true }
  page_footer: { font_size: 12 }
labels:
  passed: ✅ PASSED
  blocked: ❌ BLOCKED
  verified: ✅ VERIFIED
risks: # initial_risk and residual_risk prefix strings
  low: Green
  medium: Yellow
  high: Red
sheets:
  # sheet names max 31 characters
  cover:
    generator: add_cover_sheet # method name in excel.py
    name: Cover
    width: 120 # column width
    items:
      title:
        position: A1
        text: 'Tidepool Loop 1.0 Reports for Regulatory Agency'
        format: { font_size: 20, bold: true, border: 0 }
      subtitle:
        position: A2
        text: 'Generated on {date}'
        format: { font_size: 14, bold: true, border: 0 }
      introduction:
        position: A3
        text: |-

          This document is intended to show the detail of the Tidepool’s Quality Management System for Tidepool Loop. The document was automatically generated from Tidepool’s quality management system. The source documents are in Jira, our project management system. Information was pulled from these projects:
          • Tidepool Loop Functional Requirements - TLFR
          • Tidepool Loop Risks - TLR
          • Tidepool Loop Work Tickets - LOOP

          Tabs in this spreadsheet:
          • Traceability: This spreadsheet tab demonstrates traceability to and from all Tidepool Loop functional requirements. It has columns for each requirement, associated risks, design and development, verification tests, and test status.
            • For more information on Tidepool Loop’s requirements, please see Section 16 of the main pre-marketing notification document.
          • Hazard Analysis: This spreadsheet tab demonstrates Tidepool’s Risk and Hazard analysis of Tidepool Loop. Columns are included for each risk, including a summary, the potential harm and hazard category, risk assessment prior to mitigation, details of any mitigation, and risk assessment post-mitigation.
        
        format: { border: 0 }
      splash1:
        position: A4
        image: templates/excel/Tidepool Loop iPhone X - Generic Pump.png
        height: 250 # row height
        options: { object_position: 3, x_offset: 150, y_offset: 0, x_scale: 0.25, y_scale: 0.25 }
      splash2:
        position: A4
        image: templates/excel/Watch 38mm + Loop Home.png
        height: 250 # row height
        options: { object_position: 3, x_offset: 500, y_offset: 100, x_scale: 0.25, y_scale: 0.25 }
  requirements:
    generator: add_requirements_summary_sheet # method name in excel.py
    name: 'Traceability Summary'
    aggregate_risks: true
    columns:
      - { width: 7,  key: req_id,          label: 'Req ID' }
      - { width: 11, key: req_key,         label: 'Req Key' }
      - { width: 50, key: req_summary,     label: 'Req Feature' }
      - { width: 50, key: req_description, label: 'Req Description' }
      - { width: 11, key: story_key,       label: 'Story Key' }
      - { width: 50, key: story_summary,   label: 'Story Summary' }
      - { width: 15, key: story_status,    label: 'Status' }
  full_requirements:
    generator: add_requirements_sheet # method name in excel.py
    name: 'Traceability Report'
    aggregate_risks: true
    columns:
      - { width: 7,  key: req_id,          label: 'Req ID' }
      - { width: 11, key: req_key,         label: 'Req Key' }
      - { width: 50, key: req_summary,     label: 'Req Feature' }
      - { width: 50, key: req_description, label: 'Req Description' }
      - { width: 11, key: story_key,       label: 'Story Key' }
      - { width: 50, key: story_summary,   label: 'Story Summary' }
      - { width: 11, key: test_key,        label: 'Test Key' }
      - { width: 50, key: test_summary,    label: 'Test Summary' }
      - { width: 11, key: test_status,     label: 'Test Status' }
      - { width: 2,  key: gap,             label: '' }
      - { width: 11, key: risk_key,        label: 'Risk Key' }
      - { width: 50, key: risk_summary,    label: 'Hazardous Situation' }
  # risks:
  #   generator: add_risks_sheet # method name in excel.py
  #   name: 'Hazard Analysis'
  #   columns:
  #     - { width: 11, key: risk_key,             label: 'Risk Key' }
  #     - { width: 50, key: risk_summary,         label: 'Hazardous Situation' }
  #     - { width: 25, key: source,               label: 'Source' }
  #     - { width: 30, key: sequence,             label: 'Sequence of Events' }
  #     - { width: 25, key: harm,                 label: 'Harm' }
  #     - { width: 13, key: hazard_category,      label: 'Hazard Category' }
  #     - { width: 12, key: initial_severity,     label: 'Initial Severity' }
  #     - { width: 12, key: initial_probability,  label: 'Initial Probability' }
  #     - { width: 11, key: initial_risk,         label: 'Initial Risk Score' }
  #     - { width: 11, key: mitigation_key,       label: 'Mitigation Key' }
  #     - { width: 50, key: mitigation_summary,   label: 'Mitigation Summary' }
  #     - { width: 12, key: residual_severity,    label: 'Residual Severity' }
  #     - { width: 12, key: residual_probability, label: 'Residual Probability' }
  #     - { width: 11, key: residual_risk,        label: 'Residual Risk Score' }
  #     - { width: 10, key: benefit,              label: 'Benefit outweigh Risks? Y/N' }
  risks2:
    generator: add_risks_sheet_v2 # method name in excel.py
    name: 'Hazard Analysis'
    columns:
      - { width: 11, key: risk_key,               label: 'Risk Key' }
      - { width: 50, key: risk_summary,           label: 'Hazardous Situation' }
      - { width: 25, key: source,                 label: 'Source' }
      - { width: 30, key: sequence,               label: 'Sequence of Events' }
      - { width: 25, key: harm,                   label: 'Harm' }
      - { width: 25, key: hazard,                 label: 'Hazard' }
      - { width: 13, key: hazard_category,        label: 'Hazard Category' }
      - { width: 12, key: initial_severity,       label: 'Initial Severity' }
      - { width: 12, key: initial_probability,    label: 'Initial Probability' }
      - { width: 11, key: initial_risk,           label: 'Initial Risk Score' }
      - { width: 11, key: mitigation_key,         label: 'Mitigation Key' }
      - { width: 50, key: mitigation_summary,     label: 'Mitigation Summary' }
      - { width: 50, key: mitigation_description, label: 'Mitigation Description' }
      - { width: 12, key: residual_severity,      label: 'Residual Severity' }
      - { width: 12, key: residual_probability,   label: 'Residual Probability' }
      - { width: 11, key: residual_risk,          label: 'Residual Risk Score' }
      - { width: 10, key: benefit,                label: 'Benefit outweigh Risks? Y/N' }
  insulin_fidelity:
    generator: add_insulin_fidelity_sheet # method name in excel.py
    name: 'Insulin Fidelity'
    filter: [ TLR-552,TLR-548,TLR-576,TLR-577,TLR-575,TLR-196,TLR-283,TLR-313 ]
    columns:
      - { width: 11, key: risk_key,             label: 'Risk Key' }
      - { width: 50, key: risk_summary,         label: 'Hazardous Situation' }
      # - { width: 25, key: source,               label: 'Source' }
      # - { width: 30, key: sequence,             label: 'Sequence of Events' }
      # - { width: 25, key: harm,                 label: 'Harm' }
      # - { width: 25, key: hazard,               label: 'Hazard' }
      - { width: 13, key: hazard_category,      label: 'Hazard Category' }
      - { width: 12, key: initial_severity,     label: 'Initial Severity' }
      # - { width: 12, key: initial_probability,  label: 'Initial Probability' }
      - { width: 11, key: initial_risk,         label: 'Initial Risk Score' }
      # - { width: 12, key: residual_severity,    label: 'Residual Severity' }
      # - { width: 12, key: residual_probability, label: 'Residual Probability' }
      - { width: 11, key: residual_risk,        label: 'Residual Risk Score' }
      - { width: 7,  key: mitigation_id,        label: 'Req ID' }
      - { width: 11, key: mitigation_key,       label: 'Req Key' }
      - { width: 50, key: mitigation_summary,   label: 'Requirement Description' }
      - { width: 40, key: story_keys,           label: 'Work Tickets' }
      - { width: 40, key: test_keys,            label: 'Verification Tickets' }
  bugs:
    generator: add_bugs_sheet # method name in excel.py
    name: 'Open Defects'
    columns:
      - { width: 11, key: bug_key,              label: 'Defect Key' }
      - { width: 70, key: bug_summary,          label: 'Defect Summary' }
      - { width: 11, key: bug_status,           label: 'Defect Status' }
      - { width: 25, key: fix_version,          label: 'Fix Version' }
  tests:
    generator: add_tests_sheet # method name in excel.py
    name: 'Automated Tests'
    columns:
      - { width: 60, key: test_suite,           label: 'Test Suite' }
      - { width: 60, key: test_case,            label: 'Test Case' }
      - { width: 8, key: time,                  label: 'Time' }
      - { width: 11, key: status,               label: 'Status' }
  # epics:
  #   generator: add_epics_sheet # method name in excel.py
  #   name: All Development Tickets
  #   columns:
  #     - { width: 11, key: epic_key,      label: 'Epic Key' }
  #     - { width: 50, key: epic_sumamry,  label: 'Epic Summary' }
  #     - { width: 11, key: story_key,     label: 'Story Key' }
  #     - { width: 50, key: story_summary, label: 'Story Summary' }
  #     - { width: 11, key: risk_key,      label: 'Risk Key' }
  #     - { width: 50, key: risk_summary,  label: 'Hazardous Situation' }
  #     - { width: 11, key: test_key,      label: 'Test Key' }
  #     - { width: 50, key: test_summary,  label: 'Test Summary' }
  #     - { width: 11, key: test_status,   label: 'Test Status' }
output:
  report: output/report.xlsx
